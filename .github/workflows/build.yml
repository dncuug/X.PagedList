# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for Desktop Applications,
# refer to https://github.com/microsoft/github-actions-for-desktop-apps

name: Build and Test

on:
  push:
    branches: [ "master", "staging/**", "test/**" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: # Allow run on demand

jobs:

  build:

    strategy:
      fail-fast: false
      matrix:
        BuildRuntime: [win-x64, linux-x64]

    # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: ubuntu-latest

    timeout-minutes: 5

    name: Target ${{ matrix.BuildRuntime }}

    env:
      NetSdkVersion: 8.x
      NodeJsVersion: 6.x
      BuildConfiguration: Release
      BuildPlatform: Any CPU

      BuildProjects: src/*.csproj
      TestProjects: tests/*.csproj

      TestRuntime: linux-x64

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.NetSdkVersion }}

    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
        node-version: ${{ env.NodeJsVersion }}

    - name: Restore X.PagedList
      run: dotnet restore src/X.PagedList/X.PagedList.csproj -r ${{ matrix.BuildRuntime }} -v minimal

    - name: Build X.PagedList
      run: >-
          dotnet build src/X.PagedList/X.PagedList.csproj
          --no-restore
          -c ${{ env.BuildConfiguration }}
          -r ${{ matrix.BuildRuntime }}
          --self-contained

    - name: Test
      run: >-
          dotnet test tests/X.PagedList.Tests/X.PagedList.Tests.csproj
          --no-build
          -c ${{ env.BuildConfiguration }}
          -r ${{ matrix.BuildRuntime }}
          -v normal

...
